{"ast":null,"code":"var _jsxFileName = \"/Users/tyoma/react-booking-app/src/components/CustomerView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerView = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(`Appointment booked for ${date} with employee ID ${employeeId}`);\n    // Here we will later integrate the API call to backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: date,\n                onChange: e => setDate(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEmployee\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: employeeId,\n                onChange: e => setEmployeeId(e.target.value),\n                required: true,\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Book Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerView, \"sjsLajlypmy2Zm/uofraPDVppvY=\");\n_c = CustomerView;\nexport default CustomerView;\nvar _c;\n$RefreshReg$(_c, \"CustomerView\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","jsxDEV","_jsxDEV","CustomerView","_s","date","setDate","employeeId","setEmployeeId","handleSubmit","e","preventDefault","alert","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","value","onChange","target","required","as","variant","_c","$RefreshReg$"],"sources":["/Users/tyoma/react-booking-app/src/components/CustomerView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\n\nconst CustomerView = () => {\n  const [date, setDate] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert(`Appointment booked for ${date} with employee ID ${employeeId}`);\n    // Here we will later integrate the API call to backend\n  };\n\n  return (\n    <div>\n    <Container>\n      <Row>\n        <Col>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formDate\">\n              <Form.Label>Date</Form.Label>\n              <Form.Control type=\"date\" value={date} onChange={e => setDate(e.target.value)} required />\n            </Form.Group>\n            <Form.Group controlId=\"formEmployee\">\n              <Form.Label>Employee</Form.Label>\n              <Form.Control as=\"select\" value={employeeId} onChange={e => setEmployeeId(e.target.value)} required>\n                <option value=\"\">Select Employee</option>\n                {/* Employee options will be fetched from backend */}\n              </Form.Control>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Book Appointment</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n    </div>\n  );\n};\n\nexport default CustomerView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}